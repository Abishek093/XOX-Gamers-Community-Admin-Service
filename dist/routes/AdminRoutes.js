"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const AdminController_1 = require("../controllers/AdminController");
const AdminRepositoy_1 = require("../repositories/AdminRepositoy");
const AdminInteractor_1 = require("../interactors/AdminInteractor");
const authMiddleware_1 = require("../middlewares/authMiddleware");
const messageBroker_1 = require("../external-libraries/messageBroker");
const adminRouter = (0, express_1.Router)();
const adminRepository = new AdminRepositoy_1.AdminRepository();
const broker = new messageBroker_1.MessageBroker();
const adminInteractor = new AdminInteractor_1.AdminInteractor(adminRepository, broker);
const adminController = new AdminController_1.AdminController(adminInteractor);
adminRouter.post('/login', adminController.verifyLogin.bind(adminController));
// adminRouter.get('/users', protectAdmin, adminController.getUsers.bind(adminController));
adminRouter.get('/users', authMiddleware_1.protectAdmin, adminController.getUsers.bind(adminController));
adminRouter.post("/refresh-token", adminController.refreshAccessToken.bind(adminController));
adminRouter.patch('/users/:id/block', authMiddleware_1.protectAdmin, adminController.blockUnblockUser.bind(adminController));
adminRouter.get('/fetch-reports', authMiddleware_1.protectAdmin, adminController.fetchReports.bind(adminController));
adminRouter.patch('/resolve-report/:postId', authMiddleware_1.protectAdmin, adminController.resolveReport.bind(adminController));
adminRouter.patch('/delete-post/:postId', authMiddleware_1.protectAdmin, adminController.deleteReportedPost.bind(adminController));
adminRouter.post('/sponsored-posts', authMiddleware_1.protectAdmin, adminController.createSponsoredPost.bind(adminController));
adminRouter.get('/sponsored-posts', authMiddleware_1.protectAdmin, adminController.getSponsoredPosts.bind(adminController));
adminRouter.put('/sponsored-posts/:id', authMiddleware_1.protectAdmin, adminController.updateSponsoredPost.bind(adminController));
adminRouter.delete('/sponsored-posts/:id', authMiddleware_1.protectAdmin, adminController.deleteSponsoredPost.bind(adminController));
exports.default = adminRouter;
